# создание групп
- name: create group
  ansible.builtin.group:
      name: "{{ item }}"
      state: present
  loop: "{{ group_list | default([]) }}"

# # создание домашних директорий пользователей
# # нужно т.к. не получается сделать так чтобы ansible НЕ создавал группу users, и не отдавал этой группу домашние директории пользователей
# - name: create user home directory
#   ansible.builtin.file:
#       path: "{{ item.value.home }}"
#       state: directory
#       owner: "{{ item.key }}"
#       group: "{{ item.key }}"
#       mode: 0750
#   loop: "{{ user_list | default({}) | dict2items }}"

# создание пользователей
- name: create user
  ansible.builtin.user:
      name: "{{ item.key }}"
      comment: "{{ item.value.comment }}"
      groups: "{{ item.value.groups }}"
      shell: "{{ item.value.shell }}"
      home: "{{ item.value.home }}"
      create_home: true
      #   move_home: true
      append: false
  loop: "{{ user_list | default({}) | dict2items }}"

- name: change owner and group of a directory
  ansible.builtin.file:
      path: "{{ item.value.home }}"
      owner: "{{ item.key }}"
      group: "{{ item.key }}"
      recurse: true
  loop: "{{ user_list | default({}) | dict2items }}"

# # TODO не нашёл как сделать так чтобы ansible НЕ добавлял пользователей в стандартную группу users
# - name: remove user from group
#   ansible.builtin.user:
#       name: "{{ item.key }}"
#       groups: "{{ item.value.groups | difference([ 'users' ]) }}"
#       append: no
#   loop: "{{ user_list | default({}) | dict2items }}"

# # удаление группы users создаваемой ansible-ом автоматически
# - name: remove group
#   ansible.builtin.group:
#       name: users
#       state: absent

# добавление публичных ssh ключей из переменных окружения
- name: get authorized keys from environment variable
  ansible.posix.authorized_key:
      user: "{{ item.key }}"
      state: present
      exclusive: true
      key: "{{ lookup('env', 'PUB_' + item.key | upper, errors='ignore') }}"
  loop: "{{ user_list | default({}) | dict2items }}"
  when: lookup('env', 'PUB_' + item.key | upper) != ''

# добавление публичных ssh ключей из файлов
- name: get authorized keys from files
  ansible.posix.authorized_key:
      user: "{{ item }}"
      state: present
      exclusive: true
      key: "{{ lookup('file', '../roles/configure-server/files/' + item + '.pub', errors='ignore') }}"
  loop: "{{ user_list.keys() | default([]) }}"
